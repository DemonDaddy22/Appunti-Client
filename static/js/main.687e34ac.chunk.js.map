{"version":3,"sources":["components/SearchResultsContainer/styles.module.scss","ui-components/Pagination/styles.module.scss","resources/constants.ts","hooks/useTheme.ts","resources/theme.ts","context/ThemeContext.tsx","utils/index.ts","components/SearchResultsBookCard/index.tsx","components/SearchResultsContainer/index.tsx","hooks/useAsyncExec.ts","resources/colors.ts","ui-components/Button/styles.tsx","ui-components/Button/index.tsx","ui-components/Input/styles.tsx","ui-components/Input/index.tsx","ui-components/Pagination/styles.tsx","ui-components/Pagination/index.tsx","assets/icons/ChevronDown.tsx","ui-components/Select/styles.tsx","ui-components/Select/index.tsx","ui-components/Label/styles.tsx","ui-components/Label/index.tsx","screens/BooksFinder/index.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/SearchResultsBookCard/styles.module.scss","screens/BooksFinder/styles.module.scss"],"names":["module","exports","THEME","Object","freeze","LIGHT","DARK","MAX_RESULTS_OPTIONS","label","value","useTheme","swooshTheme","localStorage","getItem","JSON","stringify","parse","theme","setItem","document","documentElement","setAttribute","LIGHT_THEME","background","borderColor","text","textContrastLight","textGrey","textIntense","textLight","textObscure","textOpposite","themePrimary","themeSecondary","DARK_THEME","ThemeContextValue","isLightTheme","toggleTheme","getThemedValue","_lightValue","_darkValue","ThemeContext","React","createContext","ThemeContextProvider","props","children","getThemeFromBrowser","setThemeInBrowser","useState","setIsLightTheme","setTheme","useCallback","prevIsLightTheme","prevTheme","lightValue","darkValue","useEffect","Provider","isEmptyString","trim","length","isValidNumber","isNaN","Number","isEmptyList","obj","Array","isArray","isEmptyObject","keys","isHexColor","color","test","isValidColor","style","Option","result","exec","parseInt","rgbToHex","sep","indexOf","colorArray","substr","split","r","toString","g","b","isColorDark","colorCopy","replace","m","rgb","substring","truncateStringToLength","createListOfSize","size","start","from","map","SearchResultsBookCard","useContext","data","className","classes","searchResultsBookCardContainer","backgroundColor","column","volumeInfo","imageLinks","thumbnail","image","src","alt","title","imagePlaceholder","authors","join","date","publishedDate","description","subtitle","SearchResultsContainer","searchResultsContainer","book","i","id","useAsyncExec","cb","delay","setTimeout","defaultProps","WHITE","WHITE_TRANSPARENT_90","GREY_50","GREY_80","THEME_PRIMARY_ACCENT2","THEME_PRIMARY_ACCENT3","StyledButtonOutlined","styled","button","StyledButton","Button","onClick","disabled","ButtonOutlined","StyledInputContainer","div","StyledInput","input","Input","name","placeholder","type","onChange","containerStyle","handleChange","e","target","StyledPageButtonContainer","StyledPageButton","active","Pagination","pageRange","pageIndex","countPerPage","totalCount","handlePageChange","buttonContainerStyle","buttonStyle","totalPages","setTotalPages","currPages","setCurrPages","newPages","Math","ceil","doesPageExistInRange","page","handlePrevButtonClick","newPageIndex","handleNextButtonClick","range","renderPageButtons","useMemo","paginationContainer","fontWeight","ChevronDown","xmlns","viewBox","fill","transition","fillRule","d","clipRule","height","width","StyledSelectContainer","StyledInputButton","StyledMenu","ul","isOpen","StyledMenuItem","li","selectedColor","isSelected","isHighlighted","Select","items","options","inputContainerStyle","selectMenuStyle","selectItemStyle","onOptionChange","onInputChange","isItemPresent","inputValue","some","item","includes","handleInputBlur","selectedItem","selection","itemToString","getInputProps","getItemProps","getMenuProps","getToggleButtonProps","highlightedIndex","getRootProps","refKey","suppressRefError","onBlur","filter","index","key","StyledLabel","Label","BooksFinder","query","setQuery","setPageIndex","maxResultsOption","setMaxResultsOption","maxResultsInput","setMaxResultsInput","books","setBooks","loading","setLoading","setError","fetching","setFetching","q","startIndex","maxResults","queryParams","setQueryParams","fetchBooks","a","fetch","res","json","fetchedBooks","handleInputChange","prevQueryParams","handleSearchButtonClick","handleSelectInputChange","handleOptionSelect","option","booksFinderContainer","inputWrapper","inputCol","buttonsWrapper","totalItems","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.687e34ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchResultsContainer\":\"styles_searchResultsContainer__32RON\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationContainer\":\"styles_paginationContainer__24sVA\"};","const BOOKS_API_URI_DEV: string = 'http://localhost:5000/api/v1/books';\nconst BOOKS_API_URI_PROD: string =\n    'https://appunti-server.herokuapp.com/api/v1/books';\n\nexport const BOOKS_API_URI: string =\n    process.env.NODE_ENV === 'development'\n        ? BOOKS_API_URI_DEV\n        : BOOKS_API_URI_PROD;\n\nexport const THEME: IThemeVariants = Object.freeze({\n    LIGHT: 'light',\n    DARK: 'dark',\n});\n\nexport const MAX_RESULTS_OPTIONS: Array<ISelectOption> = [\n    {\n        label: '10',\n        value: 10,\n    },\n    {\n        label: '20',\n        value: 20,\n    },\n    {\n        label: '40',\n        value: 40,\n    },\n];\n","import { THEME } from '../resources/constants';\n\n/**\n *\n * Hook to get and set theme string into browser's localStorage\n * @returns Array of two functions\n *\n * First function - gets theme string\n *\n * Second function - sets theme string\n *\n */\nconst useTheme = (): [() => string, (theme: 'light' | 'dark') => void] => {\n    const getThemeFromStorageIfPresent = () => {\n        const swooshTheme =\n            localStorage.getItem('swooshTheme') || JSON.stringify(THEME.DARK);\n        return JSON.parse(swooshTheme);\n    };\n\n    const setThemeInStorage = (theme: 'light' | 'dark') => {\n        localStorage.setItem('swooshTheme', JSON.stringify(theme));\n        document.documentElement.setAttribute('theme-mode', theme);\n    };\n\n    return [getThemeFromStorageIfPresent, setThemeInStorage];\n};\n\nexport default useTheme;\n","export const LIGHT_THEME: ITheme = Object.freeze({\n    background: '#F7F7F7',\n    borderColor: '#D0D0D0',\n    text: '#101010',\n    textContrastLight: '#606060',\n    textGrey: '#5F5F5F',\n    textIntense: '#000000',\n    textLight: '#A0A0A0',\n    textObscure: '#333333',\n    textOpposite: '#D7D7D7',\n    themePrimary: '#1C4374',\n    themeSecondary: '#40A368',\n});\n\nexport const DARK_THEME: ITheme = Object.freeze({\n    background: '#0F141F',\n    borderColor: '#3A4460',\n    text: '#F0F0F0',\n    textContrastLight: '#65739C',\n    textGrey: '#8F8F8F',\n    textIntense: '#FFFFFF',\n    textLight: '#3C445C',\n    textObscure: '#A7A7A7',\n    textOpposite: '#202636',\n    themePrimary: '#1992E3',\n    themeSecondary: '#88DDAA',\n});\n","import React, { useCallback, useEffect, useState } from 'react';\nimport useTheme from '../hooks/useTheme';\nimport { THEME } from '../resources/constants';\nimport { DARK_THEME, LIGHT_THEME } from '../resources/theme';\n\nconst ThemeContextValue: IThemeContextValue = {\n    isLightTheme: false,\n    theme: DARK_THEME,\n    toggleTheme: () => {},\n    // eslint-disable-next-line no-unused-vars\n    getThemedValue: (_lightValue: string, _darkValue: string): string =>\n        _lightValue,\n};\n\nexport const ThemeContext = React.createContext(ThemeContextValue);\n\nconst ThemeContextProvider: React.FC<IContext> = (props) => {\n    const { children } = props;\n\n    const [getThemeFromBrowser, setThemeInBrowser] = useTheme();\n    const [isLightTheme, setIsLightTheme] = useState<boolean>(\n        getThemeFromBrowser() === THEME.LIGHT\n    );\n    const [theme, setTheme] = useState<ITheme>(\n        isLightTheme ? LIGHT_THEME : DARK_THEME\n    );\n\n    const toggleTheme = useCallback(() => {\n        setIsLightTheme((prevIsLightTheme) => !prevIsLightTheme);\n        setTheme((prevTheme) =>\n            prevTheme === LIGHT_THEME ? DARK_THEME : LIGHT_THEME\n        );\n    }, [isLightTheme]);\n\n    const getThemedValue = useCallback(\n        (lightValue: string, darkValue: string) =>\n            isLightTheme ? lightValue : darkValue,\n        [isLightTheme]\n    );\n\n    useEffect(\n        () => setThemeInBrowser(isLightTheme ? THEME.LIGHT : THEME.DARK),\n        [isLightTheme]\n    );\n\n    return (\n        <ThemeContext.Provider\n            value={{\n                isLightTheme,\n                theme,\n                toggleTheme,\n                getThemedValue,\n            }}\n        >\n            {children}\n        </ThemeContext.Provider>\n    );\n};\n\nexport default ThemeContextProvider;\n","/**\n *\n * @function isEmptyString - Checks if passed value is an empty string or not\n * @param {string | undefined} value\n * @returns `boolean` indicating whether `value` is an empty string\n *\n */\nexport const isEmptyString = (value: string | undefined): boolean =>\n    !value || (typeof value === 'string' && value.trim().length === 0);\n\n/**\n *\n * @function isValidNumber - Checks if passed value is a valid number or not\n * @param {number | string | undefined} value\n * @returns `boolean` indicating whether `value` is a valid number\n *\n */\nexport const isValidNumber = (value: number | string | undefined): boolean =>\n    !isNaN(Number(value));\n\n/**\n *\n * @function isEmptyList - Checks if passed object is an empty list or not\n * @param {Array<any> | undefined} obj\n * @returns `boolean` indicating whether `obj` is an empty list\n *\n */\nexport const isEmptyList = (obj: Array<any> | undefined): boolean =>\n    !Array.isArray(obj) || (Array.isArray(obj) && obj.length === 0);\n\n/**\n *\n * @function isEmptyObject - Checks if passed object is an empty object or not\n * @param {Object | undefined} obj\n * @returns `boolean` indicating whether `obj` is an empty object\n *\n */\nexport const isEmptyObject = (obj: Object | undefined): boolean =>\n    !obj ||\n    typeof obj !== 'object' ||\n    Array.isArray(obj) ||\n    Object.keys(obj).length === 0;\n\n/**\n *\n * @function isHexColor - Checks if passed color string is hex color or not\n * @param {string} color\n * @returns `boolean` indicating whether `color` is a hex color\n *\n */\nexport const isHexColor = (color: string): boolean =>\n    /^#([0-9A-F]{3}){1,2}$/i.test(color);\n\n/**\n *\n * @function isValidColor - Checks if passed color string is valid color or not\n * @param {string} color\n * @returns `boolean` indicating whether `color` is a valid color\n *\n */\nexport const isValidColor = (color: string): boolean => {\n    if (isEmptyString(color)) return false;\n    const style = new Option().style;\n    style.color = color;\n    if (isHexColor(color)) {\n        // convert hex to rgb as style.color gets converted to rgb\n        let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(color);\n        if (!result) return false;\n        color = `rgb(${parseInt(result[1], 16)}, ${parseInt(\n            result[2],\n            16\n        )}, ${parseInt(result[3], 16)})`;\n    }\n    return style.color === color;\n};\n\n/**\n *\n * @function hexToRGB - Converts valid hex color string to rgb variant\n * @param {string} color\n * @returns `string | null`\n *\n */\nexport const hexToRGB = (color: string): string | null => {\n    if (!isValidColor(color)) return null;\n\n    // checks for 3 digit hex value (#0f0) and converts them to 6 digit hex value\n    let shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    color = color.replace(\n        shorthandRegex,\n        (m, r, g, b) => r + r + g + g + b + b\n    );\n\n    let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(color);\n    // eslint-disable-next-line prettier/prettier\n    return result ? `rgb(${parseInt(result[1], 16)}, ${parseInt(result[2], 16)}, ${parseInt(result[3], 16)})` : null;\n};\n\n/**\n *\n * @function rgbToHex - Converts valid rgb color value to hex variant\n * @param {string} color\n * @returns `string | null`\n *\n */\nexport const rgbToHex = (color: string): string | null => {\n    if (!isValidColor(color)) return null;\n\n    if (isHexColor(color)) return color;\n\n    // Turn color rgb(r, g, b) into rgb(r g b)\n    const sep = color.indexOf(', ') > -1 ? ', ' : ' ';\n\n    // Turn color rgb(r g b) into [r, g, b]\n    const colorArray = color.substr(4).split(')')[0].split(sep);\n\n    // + converts string to number\n    let r = (+colorArray[0]).toString(16),\n        g = (+colorArray[1]).toString(16),\n        b = (+colorArray[2]).toString(16);\n\n    if (r.length === 1) r = '0' + r;\n    if (g.length === 1) g = '0' + g;\n    if (b.length === 1) b = '0' + b;\n\n    return '#' + r + g + b;\n};\n\n/**\n *\n * @function isColorDark - Checks if passed color string is dark or not\n * @param {string | undefined} color: ;\n * @returns `boolean` indicating whether `color` is a dark color\n *\n */\nexport const isColorDark = (color: string | undefined): boolean => {\n    if (!color) return false;\n    if (!isValidColor(color)) return false;\n\n    let colorCopy: string | null = color;\n    if (!isHexColor(color)) colorCopy = rgbToHex(color);\n\n    if (!colorCopy) return false;\n\n    const is3digitHex = /^#[0-9A-F]{3}$/i.test(colorCopy);\n    if (is3digitHex)\n        colorCopy = colorCopy.replace(\n            /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i,\n            (m, r, g, b) => r + r + g + g + b + b\n        );\n\n    let rgb = parseInt(colorCopy.substring(1), 16);\n    let r = (rgb >> 16) & 0xff;\n    let g = (rgb >> 8) & 0xff;\n    let b = (rgb >> 0) & 0xff;\n\n    let luma = 0.2126 * r + 0.7152 * g + 0.0722 * b; // per ITU-R BT.709\n    return luma < 100;\n};\n\n/**\n *\n * @function truncateStringToLength - Truncates passed value to specified length\n * @param {string | undefined} value\n * @param {number | undefined} length\n * @returns truncated `value` if its length is greater than or equal to `length`\n *\n */\nexport const truncateStringToLength = (\n    value: string | undefined,\n    length: number | undefined\n): string => {\n    if (!value || !length || isEmptyString(value) || !isValidNumber(length))\n        return '';\n    return value?.length < length ? value : `${value?.substring(0, length)}...`;\n};\n\n/**\n *\n * @function createListOfSize - Creates a list of length `size` containing integers from `start`\n * @param {number} size - specifies size of list\n * @param {number} start - specifies first value of list\n * @returns list containing integers from 1 to size (included)\n *\n */\nexport const createListOfSize = (size: number, start: number = 1): number[] =>\n    size > 0 ? Array.from(Array(size)).map(() => start++) : [];\n","/* eslint-disable prettier/prettier */\nimport React, { useContext } from 'react';\nimport { ThemeContext } from '../../context/ThemeContext';\nimport { isEmptyObject, truncateStringToLength } from '../../utils';\nimport classes from './styles.module.scss';\n\nconst SearchResultsBookCard: React.FC<ISearchResultsBookCard> = (props) => {\n    const { getThemedValue } = useContext(ThemeContext);\n    const { data, style } = props;\n\n    return !isEmptyObject(data) ? (\n        <div\n            className={classes.searchResultsBookCardContainer}\n            style={{\n                backgroundColor: getThemedValue('#FFFFFF', '#121929'),\n                ...style,\n            }}\n        >\n            <div className={classes.column}>\n                {data.volumeInfo?.imageLinks?.thumbnail ? (\n                    <img\n                        className={classes.image}\n                        src={data.volumeInfo.imageLinks.thumbnail}\n                        alt={data.volumeInfo?.title}\n                    />\n                ) : (\n                    <div className={classes.imagePlaceholder}>\n                        <img\n                            src=\"https://res.cloudinary.com/yelp-camp/image/upload/v1624193684/BookPlaceholder.jpg\"\n                            alt=\"no-cover\"\n                        />\n                    </div>\n                )}\n            </div>\n            <div className={classes.column}>\n                <div className={classes.title}>\n                    {data.volumeInfo?.title}\n                </div>\n                <div className={classes.authors}>\n                    {data.volumeInfo?.authors?.join(',')}\n                </div>\n                <div className={classes.date}>\n                    {data.volumeInfo?.publishedDate}\n                </div>\n                <div className={classes.description}>\n                    {data.volumeInfo?.description\n                        ? truncateStringToLength(\n                            data.volumeInfo?.description,\n                            200\n                        )\n                        : data.volumeInfo?.subtitle\n                            ? truncateStringToLength(data.volumeInfo?.subtitle, 200)\n                            : 'No Preview Available'}\n                </div>\n            </div>\n        </div>\n    ) : null;\n};\n\nexport default SearchResultsBookCard;\n","import React from 'react';\nimport { isEmptyList } from '../../utils';\nimport SearchResultsBookCard from '../SearchResultsBookCard';\nimport classes from './styles.module.scss';\n\nconst SearchResultsContainer: React.FC<ISearchResultsContainer> = (props) => {\n    const { data, style } = props;\n\n    return (\n        <div className={classes.searchResultsContainer} style={style}>\n            {!isEmptyList(data) &&\n                data?.map((book, i) => (\n                    <SearchResultsBookCard\n                        key={book?.id || i}\n                        data={book}\n                    ></SearchResultsBookCard>\n                ))}\n        </div>\n    );\n};\n\nexport default SearchResultsContainer;\n","/**\n *\n * Hook to asynchronously execute a callback function after some delay\n * @param cb - callback to execute asynchronously, useful in case of updating state\n * @param delay (default: `0`) - specifies time (in ms) after which `cb` must be executed\n * @returns `id` - id corresponding to the timer created by setTimeout call, can be used to clear the timeout\n *\n */\nconst useAsyncExec = (cb: () => void, delay?: number) => {\n    const id = setTimeout(cb, delay);\n\n    return id;\n};\n\nexport default useAsyncExec;\n\nuseAsyncExec.defaultProps = { delay: 0 };\n","export const RED_50: string = '#ffebee';\nexport const RED_100: string = '#ffcdd2';\nexport const RED_200: string = '#ef9a9a';\nexport const RED_300: string = '#e57373';\nexport const RED_400: string = '#ef5350';\nexport const RED_500: string = '#f44336';\nexport const RED_600: string = '#e53935';\nexport const RED_700: string = '#d32f2f';\nexport const RED_800: string = '#c62828';\nexport const RED_900: string = '#b71c1c';\n\nexport const PURPLE_50: string = '#f3e5f5';\nexport const PURPLE_100: string = '#e1bee7';\nexport const PURPLE_200: string = '#ce93d8';\nexport const PURPLE_300: string = '#ba68c8';\nexport const PURPLE_400: string = '#ab47bc';\nexport const PURPLE_500: string = '#9c27b0';\nexport const PURPLE_600: string = '#8e24aa';\nexport const PURPLE_700: string = '#7b1fa2';\nexport const PURPLE_800: string = '#6a1b9a';\nexport const PURPLE_900: string = '#4a148c';\n\nexport const DEEP_PURPLE_50: string = '#ede7f6';\nexport const DEEP_PURPLE_100: string = '#d1c4e9';\nexport const DEEP_PURPLE_200: string = '#b39ddb';\nexport const DEEP_PURPLE_300: string = '#9575cd';\nexport const DEEP_PURPLE_400: string = '#7e57c2';\nexport const DEEP_PURPLE_500: string = '#673ab7';\nexport const DEEP_PURPLE_600: string = '#5e35b1';\nexport const DEEP_PURPLE_700: string = '#512da8';\nexport const DEEP_PURPLE_800: string = '#4527a0';\nexport const DEEP_PURPLE_900: string = '#311b92';\n\nexport const INDIGO_50: string = '#e8eaf6';\nexport const INDIGO_100: string = '#c5cae9';\nexport const INDIGO_200: string = '#9fa8da';\nexport const INDIGO_300: string = '#7986cb';\nexport const INDIGO_400: string = '#5c6bc0';\nexport const INDIGO_500: string = '#3f51b5';\nexport const INDIGO_600: string = '#3949ab';\nexport const INDIGO_700: string = '#303f9f';\nexport const INDIGO_800: string = '#283593';\nexport const INDIGO_900: string = '#1a237e';\n\nexport const BLUE_50: string = '#e3f2fd';\nexport const BLUE_100: string = '#bbdefb';\nexport const BLUE_200: string = '#90caf9';\nexport const BLUE_300: string = '#64b5f6';\nexport const BLUE_400: string = '#42a5f5';\nexport const BLUE_500: string = '#2196f3';\nexport const BLUE_600: string = '#1e88e5';\nexport const BLUE_700: string = '#1976d2';\nexport const BLUE_800: string = '#1565c0';\nexport const BLUE_900: string = '#0d47a1';\n\nexport const GREEN_50: string = '#e8f5e9';\nexport const GREEN_100: string = '#c8e6c9';\nexport const GREEN_200: string = '#a5d6a7';\nexport const GREEN_300: string = '#81c784';\nexport const GREEN_400: string = '#66bb6a';\nexport const GREEN_500: string = '#4caf50';\nexport const GREEN_600: string = '#43a047';\nexport const GREEN_700: string = '#388e3c';\nexport const GREEN_800: string = '#2e7d32';\nexport const GREEN_900: string = '#1b5e20';\n\nexport const TEAL_50: string = '#e0f2f1';\nexport const TEAL_100: string = '#b2dfdb';\nexport const TEAL_200: string = '#80cbc4';\nexport const TEAL_300: string = '#4db6ac';\nexport const TEAL_400: string = '#26a69a';\nexport const TEAL_500: string = '#009688';\nexport const TEAL_600: string = '#00897b';\nexport const TEAL_700: string = '#00796b';\nexport const TEAL_800: string = '#00695c';\nexport const TEAL_900: string = '#004d40';\n\nexport const ORANGE_50: string = '#fff3e0';\nexport const ORANGE_100: string = '#ffe0b2';\nexport const ORANGE_200: string = '#ffcc80';\nexport const ORANGE_300: string = '#ffb74d';\nexport const ORANGE_400: string = '#ffa726';\nexport const ORANGE_500: string = '#ff9800';\nexport const ORANGE_600: string = '#fb8c00';\nexport const ORANGE_700: string = '#f57c00';\nexport const ORANGE_800: string = '#ef6c00';\nexport const ORANGE_900: string = '#e65100';\n\nexport const DEEP_ORANGE_50: string = '#fbe9e7';\nexport const DEEP_ORANGE_100: string = '#ffccbc';\nexport const DEEP_ORANGE_200: string = '#ffab91';\nexport const DEEP_ORANGE_300: string = '#ff8a65';\nexport const DEEP_ORANGE_400: string = '#ff7043';\nexport const DEEP_ORANGE_500: string = '#ff5722';\nexport const DEEP_ORANGE_600: string = '#f4511e';\nexport const DEEP_ORANGE_700: string = '#e64a19';\nexport const DEEP_ORANGE_800: string = '#d84315';\nexport const DEEP_ORANGE_900: string = '#bf360c';\n\nexport const YELLOW_50: string = '#fffde7';\nexport const YELLOW_100: string = '#fff9c4';\nexport const YELLOW_200: string = '#fff59d';\nexport const YELLOW_300: string = '#fff176';\nexport const YELLOW_400: string = '#ffee58';\nexport const YELLOW_500: string = '#ffeb3b';\nexport const YELLOW_600: string = '#fdd835';\nexport const YELLOW_700: string = '#fbc02d';\nexport const YELLOW_800: string = '#f9a825';\nexport const YELLOW_900: string = '#f57f17';\n\nexport const WHITE: string = '#FFFFFF';\nexport const WHITE_TRANSPARENT: string = '#FFFFFF59';\nexport const WHITE_TRANSPARENT_20: string = '#FFFFFF33';\nexport const WHITE_TRANSPARENT_30: string = '#FFFFFF4D';\nexport const WHITE_TRANSPARENT_50: string = '#FFFFFF80';\nexport const WHITE_TRANSPARENT_70: string = '#FFFFFFB3';\nexport const WHITE_TRANSPARENT_90: string = '#FFFFFFE6';\n\nexport const BLACK: string = '#000000';\nexport const BLACK_5: string = '#0000000D';\nexport const BLACK_10: string = '#0000001A';\nexport const BLACK_20: string = '#00000033';\nexport const BLACK_30: string = '#0000004D';\nexport const BLACK_40: string = '#00000066';\nexport const BLACK_50: string = '#00000080';\nexport const BLACK_60: string = '#00000099';\nexport const BLACK_70: string = '#000000B3';\nexport const BLACK_80: string = '#000000CC';\nexport const BLACK_90: string = '#000000E6';\n\nexport const GREY_5: string = '#0D0D0D';\nexport const GREY_10: string = '#1A1A1A';\nexport const GREY_20: string = '#333333';\nexport const GREY_30: string = '#4D4D4D';\nexport const GREY_40: string = '#666666';\nexport const GREY_50: string = '#808080';\nexport const GREY_60: string = '#999999';\nexport const GREY_70: string = '#B3B3B3';\nexport const GREY_80: string = '#CCCCCC';\nexport const GREY_90: string = '#E6E6E6';\nexport const GREY_100: string = '#f7f4f4';\n\nexport const THEME_PRIMARY_ACCENT1: string = '#1992E3';\nexport const THEME_PRIMARY_ACCENT2: string = '#1C4374';\nexport const THEME_PRIMARY_ACCENT3: string = '#202636';\nexport const THEME_SECONDARY_ACCENT1: string = '#40A368';\nexport const THEME_SECONDARY_ACCENT2: string = '#88DDAA';\n","/* eslint-disable prettier/prettier */\nimport styled from 'styled-components';\nimport { BLACK_30, GREY_50, THEME_PRIMARY_ACCENT3, WHITE_TRANSPARENT_90 } from '../../resources/colors';\nimport { isColorDark } from '../../utils';\n\nexport const StyledButtonOutlined = styled.button`\n    border: 1px solid ${(props: IColor) => props.color};\n    border-radius: 4px;\n    background-color: transparent;\n    color: ${(props) => props.color};\n    cursor: pointer;\n    filter: brightness(1);\n    font-size: 0.85rem;\n    font-weight: 500;\n    letter-spacing: 0.25px;\n    outline: none;\n    padding: 0.6rem 0.85rem;\n    text-transform: uppercase;\n    transition: background-color 0.25s, border 0.25s, color 0.25s, filter 0.1s;\n\n    &:hover {\n        background-color: ${(props: IColor) => props.color};\n        color: ${(props: IColor) => isColorDark(props.color) ? WHITE_TRANSPARENT_90 : THEME_PRIMARY_ACCENT3};\n        outline: none;\n    }\n\n    &:active {\n        filter: brightness(0.75);\n    }\n\n    &:disabled {\n        background-color: transparent !important;\n        border-color: ${GREY_50} !important;\n        color: ${GREY_50} !important;\n        cursor: auto !important;\n    }\n\n    @media (min-width: 1024px) {\n        font-size: 0.9rem;\n        padding: 0.7rem 0.95rem;\n    }\n\n    @media (min-width: 1500px) {\n        font-size: 1rem;\n        padding: 0.75rem 1rem;\n    }\n`;\n\nexport const StyledButton = styled.button`\n    background-color: ${(props: IColors) => props.backgroundColor};\n    border: 1px solid ${(props: IColors) => props.borderColor};\n    border-radius: 4px;\n    box-shadow: none;\n    color: ${(props) => props.color};\n    cursor: pointer;\n    filter: brightness(1);\n    font-size: 0.85rem;\n    font-weight: 500;\n    letter-spacing: 0.25px;\n    outline: none;\n    padding: 0.6rem 0.85rem;\n    text-transform: uppercase;\n    transition: background-color 0.25s, border 0.25s, box-shadow 0.25s,\n        color 0.25s, filter 0.25s;\n\n    &:hover {\n        box-shadow: 0 2px 8px ${BLACK_30};\n        filter: brightness(1.15);\n        outline: none;\n    }\n\n    &:active {\n        filter: brightness(0.85);\n    }\n\n    &:disabled {\n        background-color: ${GREY_50} !important;\n        border-color: ${GREY_50} !important;\n        color: ${WHITE_TRANSPARENT_90} !important;\n        cursor: auto !important;\n        filter: initial !important;\n    }\n\n    @media (min-width: 1024px) {\n        font-size: 0.9rem;\n        padding: 0.7rem 0.95rem;\n    }\n\n    @media (min-width: 1500px) {\n        font-size: 1rem;\n        padding: 0.75rem 1rem;\n    }\n`;\n","import React, { useContext } from 'react';\nimport { ThemeContext } from '../../context/ThemeContext';\nimport { StyledButton, StyledButtonOutlined } from './styles';\n\nconst Button: React.FC<IButton> = (props) => {\n    const { theme } = useContext(ThemeContext);\n    const {\n        children,\n        color = theme.textOpposite,\n        backgroundColor = theme.themePrimary,\n        borderColor = theme.themePrimary,\n        onClick,\n        style,\n        disabled,\n    } = props;\n\n    return (\n        <StyledButton\n            color={color}\n            backgroundColor={backgroundColor}\n            borderColor={borderColor}\n            onClick={onClick}\n            style={style}\n            disabled={disabled}\n        >\n            {children}\n        </StyledButton>\n    );\n};\n\nexport const ButtonOutlined: React.FC<IButtonOutlined> = (props) => {\n    const { theme } = useContext(ThemeContext);\n    const {\n        children,\n        color = theme.themePrimary,\n        onClick,\n        style,\n        disabled,\n    } = props;\n\n    return (\n        <StyledButtonOutlined\n            color={color}\n            onClick={onClick}\n            style={style}\n            disabled={disabled}\n        >\n            {children}\n        </StyledButtonOutlined>\n    );\n};\n\nexport default Button;\n\nButton.defaultProps = { style: {}, disabled: false };\nButtonOutlined.defaultProps = { style: {}, disabled: false };\n","/* eslint-disable indent */\nimport styled from 'styled-components';\nimport { isHexColor, rgbToHex } from '../../utils';\n\nexport const StyledInputContainer = styled.div`\n    margin: 0.25rem 0;\n    position: relative;\n    width: 100%;\n`;\n\nexport const StyledInput = styled.input`\n    background: transparent;\n    border: 1px solid;\n    border-color: ${(props: IColors) => {\n        const borderColor = props.borderColor || '';\n        return isHexColor(borderColor) ? borderColor : rgbToHex(borderColor);\n    }}9F;\n    border-radius: 4px;\n    color: ${(props: IColors) => props.color};\n    font-size: 1.05rem;\n    outline: none;\n    padding: 0.8rem 0.6rem;\n    width: 100%;\n    transition: border 0.25s;\n\n    @media (min-width: 1024px) {\n        font-size: 1.1rem;\n        padding: 0.9rem 0.7rem;\n    }\n\n    @media (min-width: 1500px) {\n        font-size: 1.15rem;\n        padding: 1rem 0.8rem;\n    }\n\n    &::placeholder {\n        color: ${(props: IColors) => {\n            const color = props.color || '';\n            return isHexColor(color) ? color : rgbToHex(color);\n        }}AF;\n    }\n\n    &:hover {\n        border-color: ${(props: IColors) => props.borderColor};\n    }\n\n    & ~ .focus-border:before,\n    & ~ .focus-border:after {\n        background-color: ${(props: IColors) => props.color};\n        content: '';\n        height: 2px;\n        left: 0;\n        position: absolute;\n        top: 0;\n        width: 0;\n        transition: 0.3s;\n\n        @media (min-width: 1024px) {\n            transition: 0.5s;\n        }\n    }\n\n    & ~ .focus-border i:before,\n    & ~ .focus-border i:after {\n        background-color: ${(props: IColors) => props.color};\n        content: '';\n        height: 0;\n        left: 0;\n        position: absolute;\n        top: 0;\n        width: 2px;\n        transition: 0.4s;\n\n        @media (min-width: 1024px) {\n            transition: 0.6s;\n        }\n    }\n\n    & ~ .focus-border:after,\n    & ~ .focus-border i:after {\n        bottom: 0;\n        left: auto;\n        right: 0;\n        top: auto;\n    }\n\n    &:focus ~ .focus-border:before,\n    &:focus ~ .focus-border:after {\n        width: 100%;\n        transition: 0.3s;\n\n        @media (min-width: 1024px) {\n            transition: 0.5s;\n        }\n    }\n\n    &:focus ~ .focus-border i:before,\n    &:focus ~ .focus-border i:after {\n        height: 100%;\n        transition: 0.4s;\n\n        @media (min-width: 1024px) {\n            transition: 0.6s;\n        }\n    }\n`;\n","import React, { useCallback, useContext } from 'react';\nimport { ThemeContext } from '../../context/ThemeContext';\nimport { StyledInput, StyledInputContainer } from './styles';\n\nconst Input: React.FC<IInput> = (props) => {\n    const { theme } = useContext(ThemeContext);\n    const {\n        value,\n        name,\n        placeholder,\n        type,\n        color = theme.themeSecondary,\n        borderColor = theme.borderColor,\n        onChange,\n        style,\n        containerStyle,\n    } = props;\n\n    const handleChange = useCallback(\n        (e: React.ChangeEvent<HTMLInputElement>) => onChange(e.target.value),\n        [onChange]\n    );\n\n    return (\n        <StyledInputContainer style={containerStyle}>\n            <StyledInput\n                color={color}\n                borderColor={borderColor}\n                type={type}\n                value={value}\n                placeholder={placeholder}\n                name={name}\n                onChange={handleChange}\n                style={style}\n            ></StyledInput>\n            <span className=\"focus-border\">\n                <i></i>\n            </span>\n        </StyledInputContainer>\n    );\n};\n\nexport default Input;\n\nInput.defaultProps = {\n    type: 'text',\n    style: {},\n};\n","/* eslint-disable prettier/prettier */\nimport styled from 'styled-components';\nimport { WHITE_TRANSPARENT_90, THEME_PRIMARY_ACCENT3, GREY_50 } from '../../resources/colors';\nimport { isColorDark } from '../../utils';\n\ninterface IProps extends IPageButton, IColors {};\n\nexport const StyledPageButtonContainer = styled.div`\n    border: 1px solid ${({ color, disabled }: IProps) => disabled ? GREY_50 : color};\n    border-radius: 4px;\n    display: flex;\n    transition: border 0.25s;\n`;\n\nexport const StyledPageButton = styled.button`\n    background-color: ${({ active, color }: IProps) => active ? color : 'transparent'};\n    border: none;\n    border-right: 1px solid ${({ color, disabled }: IProps) => disabled ? GREY_50 : color};\n    color: ${({ active, color }: IProps) => active ? (isColorDark(color) ? WHITE_TRANSPARENT_90 : THEME_PRIMARY_ACCENT3) : color};\n    cursor: pointer;\n    font-size: 0.85rem;\n    font-weight: 500;\n    outline: none;\n    padding: 0.6rem 0.85rem;\n    transition: background-color 0.25s, border 0.25s, color 0.25s;\n\n    &:last-child {\n        border-right: none;\n    }\n\n    &:hover {\n        background-color: ${({ color }: IProps) => color};\n        color: ${({ color }: IProps) => isColorDark(color) ? WHITE_TRANSPARENT_90 : THEME_PRIMARY_ACCENT3};\n        outline: none;\n    }\n\n    &:disabled {\n        background-color: transparent !important;\n        color: ${GREY_50} !important;\n        cursor: auto !important;\n    }\n\n    @media (min-width: 1024px) {\n        font-size: 0.9rem;\n        padding: 0.7rem 0.95rem;\n    }\n\n    @media (min-width: 1500px) {\n        font-size: 1rem;\n        padding: 0.75rem 1rem;\n    }\n`;\n","import React, {\n    useCallback,\n    useContext,\n    useEffect,\n    useMemo,\n    useState,\n} from 'react';\nimport { ButtonOutlined } from '../Button';\nimport { createListOfSize, isValidNumber } from '../../utils';\nimport { ThemeContext } from '../../context/ThemeContext';\nimport { THEME_PRIMARY_ACCENT2, GREY_80 } from '../../resources/colors';\nimport { StyledPageButton, StyledPageButtonContainer } from './styles';\nimport classes from './styles.module.scss';\n\nconst Pagination: React.FC<IPagination> = (props) => {\n    const {\n        pageRange,\n        pageIndex,\n        countPerPage,\n        totalCount,\n        disabled,\n        handlePageChange,\n        style,\n        buttonContainerStyle,\n        buttonStyle,\n    } = props;\n\n    const { isLightTheme, getThemedValue } = useContext(ThemeContext);\n    const [totalPages, setTotalPages] = useState<number>(0);\n    const [currPages, setCurrPages] = useState<number[]>(() =>\n        createListOfSize(pageRange)\n    );\n\n    useEffect(() => {\n        if (isValidNumber(pageRange)) {\n            const newPages = createListOfSize(\n                pageRange,\n                pageIndex > 0 ? pageIndex : 1\n            );\n            setCurrPages(newPages);\n        }\n    }, [pageRange]);\n\n    useEffect(() => {\n        setTotalPages(\n            countPerPage <= 0 ? 0 : Math.ceil(totalCount / countPerPage)\n        );\n    }, [countPerPage, totalCount]);\n\n    const doesPageExistInRange = useCallback(\n        (page: number) =>\n            page >= currPages[0] && page <= currPages[pageRange - 1],\n        [pageRange, currPages]\n    );\n\n    const handlePrevButtonClick = useCallback(() => {\n        const newPageIndex = pageIndex - 1;\n        if (newPageIndex < 1) return;\n        if (!doesPageExistInRange(newPageIndex)) {\n            if (newPageIndex >= pageRange) {\n                const newPages = createListOfSize(\n                    pageRange,\n                    newPageIndex - pageRange + 1\n                );\n                setCurrPages(newPages);\n            } else {\n                const newPages = createListOfSize(pageRange, 1);\n                setCurrPages(newPages);\n            }\n        }\n        handlePageChange(newPageIndex);\n    }, [pageIndex, pageRange]);\n\n    const handleNextButtonClick = useCallback(() => {\n        const newPageIndex = pageIndex + 1;\n        if (newPageIndex > totalPages) return;\n        if (!doesPageExistInRange(newPageIndex)) {\n            if (newPageIndex <= totalPages - pageRange + 1) {\n                const newPages = createListOfSize(pageRange, newPageIndex);\n                setCurrPages(newPages);\n            } else {\n                const range = totalPages - newPageIndex + 1;\n                const newPages = [\n                    ...createListOfSize(\n                        pageRange - range,\n                        newPageIndex - pageRange + range\n                    ),\n                    ...createListOfSize(range, newPageIndex),\n                ];\n                setCurrPages(newPages);\n            }\n        }\n        handlePageChange(newPageIndex);\n    }, [totalPages, pageIndex, pageRange]);\n\n    const renderPageButtons = useMemo(\n        () => (\n            <StyledPageButtonContainer\n                disabled={disabled}\n                color={getThemedValue(THEME_PRIMARY_ACCENT2, GREY_80)}\n                style={buttonContainerStyle}\n            >\n                {currPages.map((page) => (\n                    <StyledPageButton\n                        disabled={disabled}\n                        key={`page-${page}-of-${totalPages}`}\n                        onClick={() => handlePageChange(page)}\n                        style={buttonStyle}\n                        color={getThemedValue(THEME_PRIMARY_ACCENT2, GREY_80)}\n                        active={page === pageIndex}\n                    >\n                        {page}\n                    </StyledPageButton>\n                ))}\n            </StyledPageButtonContainer>\n        ),\n        [\n            isLightTheme,\n            currPages,\n            pageIndex,\n            countPerPage,\n            totalPages,\n            disabled,\n            buttonStyle,\n            buttonContainerStyle,\n        ]\n    );\n\n    return totalCount > 0 ? (\n        <div className={classes.paginationContainer} style={style}>\n            <ButtonOutlined\n                color={getThemedValue(THEME_PRIMARY_ACCENT2, GREY_80)}\n                style={{ fontWeight: 'bold' }}\n                disabled={pageIndex === 1 || disabled}\n                onClick={handlePrevButtonClick}\n            >\n                &lt;\n            </ButtonOutlined>\n            {renderPageButtons}\n            <ButtonOutlined\n                color={getThemedValue(THEME_PRIMARY_ACCENT2, GREY_80)}\n                style={{ fontWeight: 'bold' }}\n                disabled={pageIndex === totalPages || disabled}\n                onClick={handleNextButtonClick}\n            >\n                &gt;\n            </ButtonOutlined>\n        </div>\n    ) : null;\n};\n\nexport default Pagination;\n","import React from 'react';\n\n/* eslint-disable max-len */\nconst ChevronDown: React.FC<IIcon> = (props) => {\n    const { color, style } = props;\n\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 20 20\"\n            fill={color}\n            style={{ ...style, transition: 'fill 0.25s' }}\n        >\n            <path\n                fillRule=\"evenodd\"\n                d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"\n                clipRule=\"evenodd\"\n            />\n        </svg>\n    );\n};\n\nexport default ChevronDown;\n\nChevronDown.defaultProps = {\n    style: {\n        height: 16,\n        width: 16,\n    },\n};\n","/* eslint-disable indent */\n\nimport styled from 'styled-components';\nimport { isHexColor, rgbToHex } from '../../utils';\n\nexport const StyledSelectContainer = styled.div`\n    position: relative;\n    z-index: 100;\n`;\n\nexport const StyledInputContainer = styled.div`\n    border: 1px solid;\n    border-color: ${(props: IColors) => {\n        const borderColor = props.borderColor || '';\n        return isHexColor(borderColor) ? borderColor : rgbToHex(borderColor);\n    }}9F;\n    border-radius: 4px;\n    display: inline-flex;\n    font-family: inherit;\n    margin: 4px 0;\n    padding: 0;\n    transition: border 0.25s;\n\n    &:hover {\n        border-color: ${({ borderColor }: IColors) => borderColor};\n    }\n\n    & input {\n        background-color: transparent;\n        border: none;\n        border-top-left-radius: inherit;\n        border-bottom-left-radius: inherit;\n        color: ${({ color }: IColors) => color};\n        font-family: inherit;\n        font-size: 1.05rem;\n        outline: none;\n        padding: 0.8rem 0.6rem;\n        transition: color 0.25s;\n\n        @media (min-width: 1024px) {\n            font-size: 1.1rem;\n            padding: 0.9rem 0.7rem;\n        }\n\n        @media (min-width: 1500px) {\n            font-size: 1.15rem;\n            padding: 1rem 0.8rem;\n        }\n\n        &::placeholder {\n            color: ${(props: IColors) => {\n                const color = props.color || '';\n                return isHexColor(color) ? color : rgbToHex(color);\n            }}AF;\n        }\n    }\n`;\n\nexport const StyledInputButton = styled.button`\n    align-items: center;\n    background-color: ${({ backgroundColor }: IBackgroundColor) =>\n        backgroundColor};\n    border: none;\n    border-top-right-radius: inherit;\n    border-bottom-right-radius: inherit;\n    cursor: pointer;\n    display: inline-flex;\n    filter: brightness(1);\n    font-size: 1.05rem;\n    font-weight: 900;\n    justify-content: center;\n    outline: none;\n    padding: 0.8rem 0.6rem;\n    transition: background-color 0.25s, filter 0.1s;\n\n    &:hover {\n        filter: brightness(0.85);\n    }\n\n    @media (min-width: 1024px) {\n        font-size: 1.1rem;\n        padding: 0.9rem 0.7rem;\n    }\n\n    @media (min-width: 1500px) {\n        font-size: 1.15rem;\n        padding: 1rem 0.8rem;\n    }\n`;\n\nexport const StyledMenu = styled.ul`\n    border: ${({ isOpen }: ISelectMenu) => (isOpen ? '1px solid' : 'none')};\n    border-color: ${({ borderColor }: ISelectMenu) => borderColor};\n    border-radius: 4px;\n    left: 50%;\n    list-style: none;\n    margin: ${({ isOpen }: ISelectMenu) => (isOpen ? '0.5rem auto 0' : 0)};\n    max-width: 16rem;\n    padding: 0;\n    position: absolute;\n    transform: translateX(-50%);\n    width: 100%;\n    transition: border 0.25s;\n\n    @media (min-width: 1200px) {\n        max-width: 18rem;\n    }\n`;\n\nexport const StyledMenuItem = styled.li`\n    background-color: ${({ backgroundColor }: ISelectItem) => backgroundColor};\n    color: ${({ color, selectedColor, isSelected }: ISelectItem) =>\n        isSelected ? selectedColor : color};\n    cursor: pointer;\n    font-weight: ${({ isSelected }: ISelectItem) =>\n        isSelected ? 'bold' : 'inherit'};\n    filter: ${({ isHighlighted }: ISelectItem) =>\n        isHighlighted ? 'brightness(0.85)' : 'brightness(1)'};\n    padding: 0.5rem 0.75rem;\n    text-align: start;\n    transition: background-color 0.25s, color 0.25s, filter 0.25s;\n\n    &:first-of-type {\n        border-top-left-radius: inherit;\n        border-top-right-radius: inherit;\n    }\n\n    &:last-of-type {\n        border-bottom-left-radius: inherit;\n        border-bottom-right-radius: inherit;\n    }\n`;\n","/* eslint-disable prettier/prettier */\n\nimport React, { useCallback, useContext } from 'react';\nimport { isEmptyList, isEmptyObject, isEmptyString } from '../../utils';\nimport Downshift from 'downshift';\nimport ChevronDown from '../../assets/icons/ChevronDown';\nimport { ThemeContext } from '../../context/ThemeContext';\nimport { THEME_PRIMARY_ACCENT3, WHITE } from '../../resources/colors';\nimport { StyledInputContainer, StyledInputButton, StyledMenu, StyledMenuItem, StyledSelectContainer } from './styles';\n\nconst Select: React.FC<ISelect> = (props) => {\n    const { theme, getThemedValue } = useContext(ThemeContext);\n\n    const {\n        placeholder = '',\n        value,\n        options: items,\n        containerStyle,\n        inputContainerStyle,\n        selectMenuStyle,\n        selectItemStyle,\n        color = theme.themeSecondary,\n        borderColor = theme.borderColor,\n        onOptionChange,\n        onInputChange,\n    } = props;\n\n    const isItemPresent = useCallback((inputValue: string | null) => (\n        !isEmptyList(items) && items.some((item) => item.label.includes(inputValue || ''))\n    ), [items]);\n\n    const handleInputBlur = useCallback((selectedItem: ISelectOption, inputValue: string | null) => {\n        if (isEmptyString(inputValue || '') && !isEmptyObject(selectedItem)) {\n            onInputChange(selectedItem.label);\n        }\n    }, [onInputChange]);\n\n    return !isEmptyList(items) ? (\n        <Downshift\n            onChange={(selection) => onOptionChange(selection)}\n            itemToString={(item) => (item ? item.label : '')}\n        >\n            {({\n                getInputProps,\n                getItemProps,\n                getMenuProps,\n                getToggleButtonProps,\n                isOpen,\n                inputValue,\n                highlightedIndex,\n                selectedItem,\n                getRootProps,\n            }) => {\n                return (\n                    <StyledSelectContainer style={containerStyle}>\n                        <StyledInputContainer\n                            color={color}\n                            borderColor={borderColor}\n                            {...getRootProps(\n                                { refKey: 'ref' },\n                                { suppressRefError: true }\n                            )}\n                        >\n                            <input\n                                {...getInputProps({\n                                    placeholder,\n                                    value,\n                                    style: inputContainerStyle,\n                                    onChange: (e) =>\n                                        onInputChange(e.target.value),\n                                    onBlur: (e) =>\n                                        handleInputBlur(selectedItem, e.target.value),\n                                })}\n                            />\n                            <StyledInputButton\n                                backgroundColor={theme.textOpposite}\n                                {...getToggleButtonProps()}\n                            >\n                                <ChevronDown color={theme.text} />\n                            </StyledInputButton>\n                        </StyledInputContainer>\n                        <StyledMenu\n                            isOpen={isOpen}\n                            borderColor={theme.borderColor}\n                            {...getMenuProps({ style: selectMenuStyle })}\n                        >\n                            {isOpen\n                                ? isItemPresent(inputValue)\n                                    ? items.filter(\n                                        (item) =>\n                                            !inputValue ||\n                                              item.label.includes(inputValue)\n                                    )\n                                        .map((item, index: number) => (\n                                            <StyledMenuItem\n                                                isHighlighted={highlightedIndex === index}\n                                                isSelected={selectedItem === item}\n                                                backgroundColor={getThemedValue(WHITE, THEME_PRIMARY_ACCENT3)}\n                                                color={theme.text}\n                                                selectedColor={theme.themeSecondary}\n                                                {...getItemProps({\n                                                    key: item.label, index, item, style: selectItemStyle\n                                                })}\n                                            >\n                                                {item.label}\n                                            </StyledMenuItem>\n                                        ))\n                                    : <StyledMenuItem\n                                        backgroundColor={getThemedValue(WHITE, THEME_PRIMARY_ACCENT3)}\n                                        color={theme.textObscure}\n                                        {...getItemProps({\n                                            key: 'no-item-present', item: null, style: selectItemStyle\n                                        })}\n                                    >\n                                        Try searching for something else...\n                                    </StyledMenuItem>\n                                : null}\n                        </StyledMenu>\n                    </StyledSelectContainer>\n                );\n            }}\n        </Downshift>\n    ) : null;\n};\n\nexport default Select;\n","import styled from 'styled-components';\n\nexport const StyledLabel = styled.div`\n    color: ${(props: IColor) => props.color};\n    font-size: 0.8rem;\n    letter-spacing: -0.5px;\n    text-align: initial;\n    transition: color 0.25s;\n\n    @media (min-width: 900px) {\n        font-size: 0.85rem;\n    }\n\n    @media (min-width: 1500px) {\n        font-size: 0.9rem;\n    }\n`;\n","import React, { useContext } from 'react';\nimport { ThemeContext } from '../../context/ThemeContext';\nimport { StyledLabel } from './styles';\n\nconst Label: React.FC<ILabel> = (props) => {\n    const { theme } = useContext(ThemeContext);\n\n    const { label, style, color = theme.textContrastLight } = props;\n\n    return (\n        <StyledLabel color={color} style={style}>\n            {label}\n        </StyledLabel>\n    );\n};\n\nexport default Label;\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport SearchResultsContainer from '../../components/SearchResultsContainer';\nimport { ThemeContext } from '../../context/ThemeContext';\nimport useAsyncExec from '../../hooks/useAsyncExec';\nimport { BOOKS_API_URI, MAX_RESULTS_OPTIONS } from '../../resources/constants';\nimport Button, { ButtonOutlined } from '../../ui-components/Button';\nimport Input from '../../ui-components/Input';\nimport Pagination from '../../ui-components/Pagination';\nimport Select from '../../ui-components/Select';\nimport Label from '../../ui-components/Label';\nimport classes from './styles.module.scss';\nimport { isEmptyString } from '../../utils';\n\nconst BooksFinder: React.FC<{}> = () => {\n    const { toggleTheme } = useContext(ThemeContext);\n\n    const [query, setQuery] = useState<string>('');\n    const [pageIndex, setPageIndex] = useState<number>(1);\n    const [maxResultsOption, setMaxResultsOption] = useState<ISelectOption>(\n        MAX_RESULTS_OPTIONS[0]\n    );\n    const [maxResultsInput, setMaxResultsInput] = useState<string>(\n        MAX_RESULTS_OPTIONS[0].label\n    );\n    const [books, setBooks] = useState<IBookSearchData | null>(null);\n    const [loading, setLoading] = useState<boolean>(false);\n    const [error, setError] = useState<boolean>(false);\n    const [fetching, setFetching] = useState<boolean>(false);\n    const [queryParams, setQueryParams] = useState<IBooksAPIParams>({\n        q: query,\n        startIndex: pageIndex - 1,\n        maxResults: maxResultsOption.value,\n    });\n\n    const fetchBooks = useCallback(async () => {\n        setLoading(true);\n        const { q, startIndex, maxResults } = queryParams;\n        try {\n            const res = await fetch(\n                `${BOOKS_API_URI}/search?q=${q}&maxResults=${maxResults}&start=${startIndex}`\n            );\n            const data: IBookSearchResponse = await res.json();\n            let fetchedBooks: IBookSearchData = data.data || {};\n            setBooks(fetchedBooks);\n        } catch (err) {\n            setError(err);\n        } finally {\n            setLoading(false);\n        }\n    }, [query, maxResultsOption, pageIndex]);\n\n    const handleInputChange = useCallback((q: string) => {\n        setQuery(q);\n        setQueryParams((prevQueryParams) => ({ ...prevQueryParams, q }));\n    }, []);\n\n    const handleSearchButtonClick = useCallback(() => {\n        setQueryParams((prevQueryParams) => ({\n            ...prevQueryParams,\n            startIndex: 0,\n        }));\n        setFetching(true);\n        useAsyncExec(() => {\n            setFetching(false);\n            setQuery('');\n        });\n    }, []);\n\n    const handlePageChange = useCallback(\n        (page) => {\n            setPageIndex(page);\n            setQueryParams((prevQueryParams) => ({\n                ...prevQueryParams,\n                startIndex: (page - 1) * maxResultsOption.value,\n            }));\n            setFetching(true);\n            useAsyncExec(() => {\n                setFetching(false);\n            });\n        },\n        [maxResultsOption]\n    );\n\n    const handleSelectInputChange = useCallback((value) => {\n        setMaxResultsInput(!isEmptyString(value) ? value : '');\n    }, []);\n\n    const handleOptionSelect = useCallback(\n        (option) => {\n            if (option !== maxResultsOption) {\n                setQueryParams((prevQueryParams) => ({\n                    ...prevQueryParams,\n                    maxResults: option.value,\n                }));\n                setMaxResultsOption(option);\n                handleSelectInputChange(option?.value);\n                setFetching(true);\n                useAsyncExec(() => {\n                    setFetching(false);\n                });\n            }\n        },\n        [handleSelectInputChange, maxResultsOption]\n    );\n\n    useEffect(() => {\n        if (fetching) fetchBooks();\n    }, [fetching, fetchBooks]);\n\n    return (\n        <div className={classes.booksFinderContainer}>\n            <div className={classes.inputWrapper}>\n                <div className={classes.inputCol}>\n                    <Label label=\"Search for a book\" />\n                    <Input\n                        name=\"search\"\n                        placeholder=\"Enter book name...\"\n                        value={query}\n                        onChange={handleInputChange}\n                    />\n                </div>\n                <div className={classes.inputCol}>\n                    <Label label=\"Max results per page\" />\n                    <Select\n                        value={maxResultsInput}\n                        options={MAX_RESULTS_OPTIONS}\n                        onOptionChange={handleOptionSelect}\n                        onInputChange={handleSelectInputChange}\n                    />\n                </div>\n            </div>\n            <div className={classes.buttonsWrapper}>\n                <ButtonOutlined onClick={handleSearchButtonClick}>\n                    Search\n                </ButtonOutlined>\n                <Button onClick={toggleTheme}>Toggle Theme</Button>\n            </div>\n            <SearchResultsContainer data={books?.items} />\n            <Pagination\n                disabled={loading}\n                pageRange={7}\n                pageIndex={pageIndex}\n                countPerPage={maxResultsOption.value}\n                totalCount={books?.totalItems || 0}\n                handlePageChange={handlePageChange}\n            />\n        </div>\n    );\n};\n\nexport default BooksFinder;\n","import React from 'react';\nimport './App.scss';\nimport ThemeContextProvider from './context/ThemeContext';\nimport BooksFinder from './screens/BooksFinder';\n\nconst App: React.FC<{}> = () => {\n    return (\n        <ThemeContextProvider>\n            <div className=\"App\">\n                <h1 className=\"header\">APPUNTI</h1>\n                <BooksFinder />\n            </div>\n        </ThemeContextProvider>\n    );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchResultsBookCardContainer\":\"styles_searchResultsBookCardContainer__3-eOD\",\"column\":\"styles_column__3hDHH\",\"imagePlaceholder\":\"styles_imagePlaceholder__3t3H9\",\"image\":\"styles_image__2-MRA\",\"title\":\"styles_title__2bFu0\",\"authors\":\"styles_authors__mvLBz\",\"date\":\"styles_date__lvyMc\",\"description\":\"styles_description__egnuU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"booksFinderContainer\":\"styles_booksFinderContainer__ITqer\",\"buttonsWrapper\":\"styles_buttonsWrapper__11sEP\",\"inputWrapper\":\"styles_inputWrapper__2SUIv\",\"inputCol\":\"styles_inputCol__3078T\"};"],"sourceRoot":""}